1.Python版本：
                 python 2.x，python 3.x
2.Python优点：
                 1学习成本低，2.免费，开源，3.应用领域广泛，4.适用人群广
3.Python解释器的分类及作用：运行文件
		 1.Cpython，c语言开发的解释器[官方]，应用广泛的解释器
		 2.Ipython，基于Cpython的一种交互式解释器
		 3.Jython
		 4.pypy
4.注释分类及作用：
 		 作用：在程序中对某些代码进行标注说明，大大的增加程序的可读性
		 分类：单行注释和多行注释
5.变量：
          	 变量就是一个存储数据的的时候当前数据所在的内存地址的名字 
6.标识符的命名规范：
                 1.由数字，字母，下划线组成
                 2.不能数字开头
	 3.不能使用内置关键字
                 4.严格区分大小写
7.标识符的命名习惯：
	         1.见名知义
                 2.大驼峰
                 3.小驼峰
                 4.下划线
8.如何格式化字符串：
                 f''(python3.6版本开始才有这种方式)    %s
9.格式化符号有哪些：
	         %s ：格式化输出字符串
                 %d ：格式化输出整数
                 %f ：格式化输出浮点数
10.转义字符作用：
	        \n :  换行
	        \t :  制表符，一个tab键(4个空格)的距离（对齐功能）      
11.运算符的分类：
	         1.算数运算符
                 2.赋值运算符
                 3.复合赋值运算符
                 4.比较运算符
                 5.逻辑运算符
		 6.成员运算符（in/not in）
12.三目运算符有什么作用：
	         1.三目运算符也叫三元运算符或者三元表达式
                 2.减少代码数量
13.while和for循环区别：
		  1.for通常循环一些有下标位置的序列，或是某一范围的循环
		  2.while通常做无限循环或者是根据某个条件循环
14.break和continue的区别：
	          1.break退出整个循环
	          2.continue退出本次循环，继续执行下一次重复执行的代码
15.for ... else语句，什么时候执行else：
	          当循环正常结束后执行的代码
16.如何定义一个字符串：
	          单引号、双引号、三引号	                  
17.下标的作用：
                  1.通过下标快速找到对应的数据（下标默认从0开始）（如果下标从后往前，默认从-1开始）
18.什么是切片：
	          切片是指对操作的对象截取其中一部分的操作
19.什么是步长：
	   	  步长是选取间隔，正负整数均可，默认步长为1
20.字符串常用操作方法有哪些：
		  1.查询：find(),index(),rfind(),rindex(),count(),
                  2.修改：replace(),split(),join(),capitalize(),title(),lower(),
                          upper(),lstrip(),rstrip(),strip(),ljust(),rjust(),center()
                  3.判断：startswith(),endswith(),isalpha(),isdigit(),isalnum(),isspace()
21.列表常用操作方法有哪些：
	          1.判断是否存在：in ，not in
                  2.增加：append(),extend(),insert(),
                  3.删除：del,pop(),remove(),clear()
                  4.修改：reverse(),sort(),
                  5.复制：copy()
22.元组常用操作方法有哪些：
                  1.查询：index(),count(),len(),
23.集合常用操作方法有哪些：
                  1.增加：add(),update(),
                  2.删除：remove(),discard(),pop()
                  3.查找：in：判断数据在集合序列，not in：判断数据不在集合序列
24.字典常用操作方法有哪些：
                  1.增：字典序列[key] = 值
                  2.删：del()/del,clear()
                  3.key值查找，get(),keys(),values(),items()
25.列表特点：
	可以一次性存储多个数据，且可以为不同数据类型
26.元组特点：
	一个元组可以存储多个数据，元组内的数据是不能被修改的
27.集合特点：
	可以去重复数据，集合是无序的，不支持下标
28.字典特点：
	     	     1.符号为大括号
                     2.数据为键值对形式出现
                     3.各个键值对之间用逗号隔开
29.哪些数据类型是可变的
             集合，字典，列表
30.哪些数据类型是不可变的
             整型，浮点型，字符串，元组
31.公共运算符有哪些：
             1.+（拼接字符串）
	     2.*（复制）
	     3.in，not in（判断元素是否在该序列）                         
32.公共方法有哪些：
             len(),del(),max(),min(),range(),enumerate(),
33.推导式有什么作用：
             简化代码，提高执行效率
34.函数定义：
             就是将一段具有独立功能的代码块整合到一个整体并命名，
             在需要的位置调用这个名称即可完成对应的需求
35.如何定义一个函数：
             def 函数名(参数)
36.函数参数有什么作用：
	     可以使函数变的更加灵活
37.函数返回值的作用：
	     函数调用后，返回需要的结果（返回多个数据的时候，默认是元组类型）
38.如何定义和查看函数的说明文档：
	     在函数内第一行位置，使用三引号定义函数的说明文档，可以使用help()这个函数，查看函数的说明文档信息
             1.def  函数名（参数）
		  """说明文档位置"""	                                                
39.函数的嵌套调用：
	    一个函数里调用另外的函数
40.变量的分类（作用域）
             局部变量
             全局变量
41.局部变量和全局变量的区别：
             局部变量：在函数体内部的变量，只在函数体内部生效，可以使用golbal关键字将局部变量修改成全局变量
             全局变量：指的是在函数体，内外都能生效的变量
42.函数参数的分类：
             形参：函数定义时书写的参数(非真实参数)
			位置参数：
			关键字参数：
			缺省参数（默认参数）：
			不定长参数：
				包裹位置参数
				包裹关键字参数
             实参：函数调用时书写的参数(真实参数)
43.什么是lambda表达式（应用场景）：
	     lambda表达式又称匿名函数
	     如果函数有一个返回值，且只有一行代码，可以使用lambda表达式
44.lambda表达式作用：
	     简化代码，提高执行效率
45.什么是高阶函数：
	     把函数作为参数传入，这样的函数称为高阶函数
46.内置高阶函数有哪些：
             1.map(),2.reduce(),3.filter()
47.文件操作的步骤：
             1.打开文件：open()
             2.读写等操作：写：对象.write('内容')，2读：文件对象.read(num),
  		对象.readlines(),对象.readdline(),对象.seek()
             3.关闭文件：对象.close()
48.文件操作的主访问模式有哪些：
             1.w：写，文件不存在则新建该文件
             2.r：读，文件不存在则报错
             3.a：追加
49.文件操作的方法有哪些： 
             1.读：文件对象.read(),文件对象.readlines(),文件对象.readline()
             2.写：文件对象.write(),文件对象.seek()
             3.关闭：文件对象.close()
50.seek()方法有什么作用：
             用来移动文件指针
51.什么是面向对象：
             是一种程序设计思想，将数据和处理数据的程序封装到对象中
52.面向对象优点和缺点：
             优点： 不在需要关心，每个功能具体的实现细节
                     大大的提高了程序的扩展性
                     提高了程序的灵活性
	     	     易扩展，易于维护
             缺点： 编程的复杂程度远高于面向过程
                     一些扩展性要求低的场景使用面向对象会徒增编程难度
		     性能低
53.什么是对象：
             对象是类创建出来的真实存在的事物
54.什么是类： 
             类是对一系列具有相同特征和行为的事物的统称
55.面向对象三大特性：
             封装，继承，多态 
56.什么是封装及优点：
             将属性和方法书写到类的里面的操作即为封装
             封装可以为属性和方法添加私有权限(安全性)
57.什么是继承及优点：
             子类默认继承父类的所有属性和方法
             子类可以重写父类属性和方法（派生）
             优点：减少代码重复
             	   为多态提供必要的支持
58.什么是单继承什么是多继承：
             单继承：一个类只能继承一个父类
             多继承：一个类同时继承多个父类
59.子类如何调用父类的属性和方法:
             super() 就是使用 super 类创建出来的对象
60.如何设置私有属性和方法：
	     在属性名和方法名前面加上两个下划线_
61.什么是多态及优点：
	     指的是一类事物有多种形态
             优点：增加了程序的灵活性
                   增加了程序的可扩展性
62.__init__方法有什么作用：
             初始化对象空间，会自动调用
63.__str__方法有什么作用:
             返回对象的描述信息，print 函数输出使用
64.__del__方法有什么作用:
             对象被从内存中销毁前，会被自动调用
65.__dict__方法有什么作用:
	     如果dict前面是类名的话 返回类内部所有属性和方法对应的字典
	     如果dict前面是对象的话,返回实例属性和值组成的字典
66.类属性和实例属性区别：
             类属性：为全类所共有，仅占用一份内存，更加节省空间，可以使用类名直接调用
	     实例属性：对每一个对象单独开辟一份内存空间来记录数据，不能使用类名直接调用
67.类属性有什么优点：
	     类属性：为全类所共有，仅占用一份内存，更加节省空间，可以使用类名直接调用
	     实例属性：对每一个对象单独开辟一份内存空间来记录数据，不能使用类名直接调用
68.类方法和实例方法有什么区别：
	     类方性：为全类所共有，仅占用一份内存，更加节省空间，可以使用类名直接调用
	     实例方法：对每一个对象单独开辟一份内存空间来记录，不能使用类名直接调用				    
69.类方法和静态方法有什么区别：
  	     类方法用@classmethod来标识  一般用cls做参数
  	     静态方法用@staticmethod来进行修饰  静态方法没有参数
70.静态方法有什么优点：
	     取消不需要的参数传递，有利于减少不必要的内存占用和性能消耗
71.类方法如何定义：
  	     Python 的类方法采用装饰器@classmethod来定义
72.实例方法如何定义：
  	     不加任何装饰器（def关键字，小括号内有一个self参数，self代表对象本身）
73.什么是异常：
	     当检测到错误是，解释器无法继续执行，出现一些错误的提示
74.异常的语法：
	      1.try：可能发生错误的代码
	      2.except：如果出现异常执行的代码
75.如何捕获指定（多个）异常：
	      当捕获多个异常时，可以把捕获的异常类型的名字，
	      放到except后，并使用元组的方式进行书写，或者except后直接跟上Exception，捕获所有的异常，后跟上as，和变量，这个变	  量保存的就是错误描述信息
76.异常的else语句有什么作用：
	     如果没有异常要执行的代码
77.异常的finally语句有什么作用：
	     无论是否异常都要执行的代码，例如，关闭文件
78.自定义的异常如何抛出：
	     raise关键字抛出异常，自定义异常一定要定义一个异常类，继承自Exception
79.什么是模块：
	     是一个python文件，以.py结尾，包含了python对象定义和python语句
80.导入模块的方式有哪些：
	     1.import 模块名
             2.from 模块名 import 功能名
             3.from 模块名 import *
             4.import 模块名 as 别名
             5.from 模块名 import 功能名 as 别名
81.as关键字有什么作用：
	     as定义别名
82.定义模块需要注意哪些点：
	     1.模块的名字就是文件的名字
	     2.自定义模块名必须符合标识符命名规则
	     3.自定义的模块名不能与已定义好的模块重名（包括python内置模块以及第三方模块）
83.__all__列表有什么作用：	                     
	     如果一个模块中有_all_变量，当使用 from xxx import*导入时，只能导入这个列表中的元素
84.什么是包：
	     将有联系的模块组织在一起，放在同一个文件夹下，并且在这个文件夹创建一个名字
	     为_init_.py文件，这个文件夹称之为包。
85.包中必须包含哪一个文件：
	    _init_.py
86.导入包的方式有哪些：
	     1.import 包名.模块名
	     2.form 包名 import *
87.xlrd、xlwt、xlutils这几个模块的函数及作用：
    	     对Excel进行操作，
	     xlwt：对Excel只有写的权限
	     xlrd：对Excel只有读的权限
	     xlutils：对Excel追加的模块，里面封装了读写的权限，
	     但需要xlrd模块的辅助才能完成追加的操作
88.什么是面向过程：
	     把完成某一个需求的所有步骤，从头到尾逐步实现。
89.面向过程有什么优点/缺点：
	     优点：复杂的问题流程化，进而简单化，性能高
	     缺点：套用流程化或者流程用来解决一个问题，基本无法更改，不易扩展，不易维护
90.with语句是什么，有什么作用：
	     上下级管理器，自动释放内存资源
91.进制转换函数有哪些：
	     将十进制转十六进制：hex()
	     将十进制转八进制：oct()
	     将十进制转二进制：bin()
	     任何进制转十进制：int()